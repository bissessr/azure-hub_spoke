{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hub and Spoke with Terraform \u00b6 Overview \u00b6 A hub and spoke topology is a nice way to isolate workloads in Azure. The idea is shared services such as IAM, security, bastion servers, dns, etc will be hosted on separate vnets (hub) and serve as a central connection point to an on-premises network and for other spokes (app) to consume shared services. Subsequent spokes will only consist of app spectific code and services. The app spoke VNets will be peered with the hub. This repo contain the necessary terraform code to help you build out an Azure platform using a hub and spoke model. It was adopted from the following tutorial. https://docs.microsoft.com/en-us/azure/terraform/terraform-hub-spoke-introduction The hub folder contain the terraform files to build and setup vnet peering between the spoke and hub vnets on-premise vnet to simulate an on premise datacenter hub vnet spoke1 vnet spoke2 vnet The webapp1_spoke folder contain webapp1 spoke 2 web server that is part of a vmscale set Source Code \u00b6 You can find the code here https://github.com/bissessr/azure-hub_spoke Instructions \u00b6 from Azure Cloud Shell, run terraform init terraform plan terraform apply More info \u00b6 Based on the following tutorial on build hub and spoke vnets https://docs.microsoft.com/en-us/azure/terraform/terraform-hub-spoke-introduction","title":"Hub and Spoke with Terraform"},{"location":"#hub-and-spoke-with-terraform","text":"","title":"Hub and Spoke with Terraform"},{"location":"#overview","text":"A hub and spoke topology is a nice way to isolate workloads in Azure. The idea is shared services such as IAM, security, bastion servers, dns, etc will be hosted on separate vnets (hub) and serve as a central connection point to an on-premises network and for other spokes (app) to consume shared services. Subsequent spokes will only consist of app spectific code and services. The app spoke VNets will be peered with the hub. This repo contain the necessary terraform code to help you build out an Azure platform using a hub and spoke model. It was adopted from the following tutorial. https://docs.microsoft.com/en-us/azure/terraform/terraform-hub-spoke-introduction The hub folder contain the terraform files to build and setup vnet peering between the spoke and hub vnets on-premise vnet to simulate an on premise datacenter hub vnet spoke1 vnet spoke2 vnet The webapp1_spoke folder contain webapp1 spoke 2 web server that is part of a vmscale set","title":"Overview"},{"location":"#source-code","text":"You can find the code here https://github.com/bissessr/azure-hub_spoke","title":"Source Code"},{"location":"#instructions","text":"from Azure Cloud Shell, run terraform init terraform plan terraform apply","title":"Instructions"},{"location":"#more-info","text":"Based on the following tutorial on build hub and spoke vnets https://docs.microsoft.com/en-us/azure/terraform/terraform-hub-spoke-introduction","title":"More info"},{"location":"index2/","text":"WebApp Cluster \u00b6 Overview \u00b6 A hub and spoke topology is a nice way to isolate workloads in Azure. The idea is shared services such as IAM, security, bastion servers, dns, etc will be hosted on separate vnets (hub) and serve as a central connection point to an on-premises network and for other spokes (app) to consume shared services. Subsequent spokes will only consist of app spectific code and services. The app spoke VNets will be peered with the hub. This repo contain the necessary terraform code to help you build out an Azure platform using a hub and spoke model. It was adopted from the following tutorial. https://docs.microsoft.com/en-us/azure/terraform/terraform-hub-spoke-introduction The hub folder contain the terraform files to build and setup vnet peering between the spoke and hub vnets on-premise vnet to simulate an on premise datacenter hub vnet spoke1 vnet spoke2 vnet The webcluster_spoke folder contain new vnet for webcluster 2 web server that is part of a vmscale set sql server database backend etc. Source Code \u00b6 You can find the code here https://github.com/bissessr/webcluster Instructions \u00b6 from Azure Cloud Shell, run terraform init terraform plan terraform apply More info \u00b6 Based on the following tutorial on build hub and spoke vnets https://docs.microsoft.com/en-us/azure/terraform/terraform-hub-spoke-introduction","title":"WebApp Cluster"},{"location":"index2/#webapp-cluster","text":"","title":"WebApp Cluster"},{"location":"index2/#overview","text":"A hub and spoke topology is a nice way to isolate workloads in Azure. The idea is shared services such as IAM, security, bastion servers, dns, etc will be hosted on separate vnets (hub) and serve as a central connection point to an on-premises network and for other spokes (app) to consume shared services. Subsequent spokes will only consist of app spectific code and services. The app spoke VNets will be peered with the hub. This repo contain the necessary terraform code to help you build out an Azure platform using a hub and spoke model. It was adopted from the following tutorial. https://docs.microsoft.com/en-us/azure/terraform/terraform-hub-spoke-introduction The hub folder contain the terraform files to build and setup vnet peering between the spoke and hub vnets on-premise vnet to simulate an on premise datacenter hub vnet spoke1 vnet spoke2 vnet The webcluster_spoke folder contain new vnet for webcluster 2 web server that is part of a vmscale set sql server database backend etc.","title":"Overview"},{"location":"index2/#source-code","text":"You can find the code here https://github.com/bissessr/webcluster","title":"Source Code"},{"location":"index2/#instructions","text":"from Azure Cloud Shell, run terraform init terraform plan terraform apply","title":"Instructions"},{"location":"index2/#more-info","text":"Based on the following tutorial on build hub and spoke vnets https://docs.microsoft.com/en-us/azure/terraform/terraform-hub-spoke-introduction","title":"More info"}]}